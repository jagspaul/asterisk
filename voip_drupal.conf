; $Id$

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[general](+)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; General settings. Comment this context out in case
; you decide to include this file into another dialplan
clearglobalvars=yes
autofailthrough=no ; TODO: shouldn't this be set to 'yes'?


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[globals](+)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; global variables. The (+) adds them to already
; existing [globals] context

; Default caller id
VD-DEFAULTCID => 1234567890


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Macros
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[macro-vd-dial]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; A macro to simplify voip drupal contexts
;
; Input:
; * ${VD-CALLERID} = caller id number
; * ${VD-MACHINEOK} = set to 1 to accept answer machines
; * ARG1 = outbound channel to be called
; * ARG2 = caller id number; if ${VD_CALLERID} is empty
;
; Output:
; * ${VD-CALLERID} = updated caller id number
; * ${VD-OUTBOUNDCHANNEL} = outbound channel being called (ARG1)
; * ${VD-DIALSTATUS} = status returned by Dial()
; * ${VD-CALLRESULT} = result of the dial attempt:
;     - NoAnswer
;     - Busy
;     - Congested
;     - ChannelUnavailable
;     - InvalidArguments
;     - MessageTooLong
;     - NoMessageLeft
;     - RecordingMachineMessage
;     - TalkingToHuman
;;;;;;;;;
; Determine caller id number
exten => s,1,GotoIf($["${VD-CALLERID}" = ""]?2:5)
exten => s,2,Set(VD-CALLERID=${ARG2})
exten => s,3,GotoIf($["${VD-CALLERID}" = ""]?4:5)
exten => s,4,Set(VD-CALLERID=${VD-DEFAULTCID})
exten => s,5,Set(CALLERID(num)=${VD-CALLERID})
; Set the CDR account number
exten => s,n,Set(CDR(accountcode)=${MACRO-EXTEN})
; Store the channel being called
exten => s,n,Set(VD-OUTBOUNDCHANNEL=${ARG1})
; Dial the number
;
; XXXXXXXXXXX TODO: Define appropriate params for Dial()!!!!!!!
;
exten => s,n,Dial(${ARG1},20,r)
exten => s,n,NoOp(VD Dial Status: ${DIALSTATUS})
; Store status for inheritted channels
exten => s,n,Set(__VD-DIALSTATUS=${DIALSTATUS})
; Redirect based on the result of the dial command
exten => s,n,Goto(call-${DIALSTATUS})
exten => s,n(call-ANSWER),Goto(vd-detect,s,1) ; success
exten => s,n(call-NOANSWER),Goto(vd-noanswer,s,1) 
exten => s,n(call-BUSY),Goto(vd-busy)
exten => s,n(call-CANCEL),Goto(vd-cancel); caller hangup before the callee picked up
exten => s,n(call-CONGESTION),Goto(vd-congestion) ; dialed number not recognized
exten => s,n(call-CHANNELUNAVAIL),Goto(vd-channelunavail)
exten => s,n(call-INVALIDARGS),Goto(vd-invalidargs) ; invalid args for dial command
exten => s,n(call-),Goto(vd-cancel) ;no status was set 
exten => s,n(call-.),Goto(vd-cancel)
; the following extensions should never be reached
exten => s,n,Playback(vm-goodbye)
exten => s,n,Hangup()


[vd-noanswer]
exten => s,1,Set(VD-CALLRESULT=NoAnswer)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=NoAnswer)
exten => s,n,Hangup()

[vd-busy]
exten => s,1,Set(VD-CALLRESULT=Busy)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=Busy)
exten => s,n,Hangup()

[vd-cancel]
exten => s,1,Set(VD-CALLRESULT=Cancelled)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=Cancelled)
exten => s,n,Hangup()

[vd-congestion]
exten => s,1,Set(VD-CALLRESULT=Congestion)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=Congestion)
exten => s,n,Hangup()

[vd-channelunavail]
exten => s,1,Set(VD-CALLRESULT=ChannelUnavailable)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=ChannelUnavailable)
exten => s,n,Hangup()

[vd-invalidargs]
exten => s,1,Set(VD-CALLRESULT=InvalidArguments)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=InvalidArguments)
exten => s,n,Hangup()

[vd-detect]
;detect if callee is a human or an answering machine
exten => s,1,Set(TIMEOUT(digit)=5)
exten => s,n,Set(TIMEOUT(response)=10)
exten => s,n,Set(MACHINE=0)
exten => s,n,BackgroundDetect(silence/3,1000,50)
exten => s,n,Verbose(3,Answering machine detected)
exten => s,n,Set(MACHINE=1)
exten => s,n,BackgroundDetect(silence/10,1000,50,30050)
exten => s,n,NoOp(Too long of a message in answering machine)
exten => s,n,Set(VD-CALLRESULT=MessageTooLong)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=MessageTooLong)
exten => s,n,Hangup()
exten => talk,n,GoToIf($[${MACHINE}=1]?machines:humans)
exten => talk,n(machines),Goto(vd-machine,s,1) ;this is a machine
exten => talk,n(humans),Goto(vd-human,s,1)   ;this is a human
exten => talk,n,Hangup()

[vd-machine]
; in case callee is an answering machine
exten => s,1,Wait(2)
exten => s,n,GoToIf($[${VD-MACHINEOK}=1]?machineok:machinenotok)
exten => s,n(machinenotok),NoOp(Not ok to leave message on machine)
exten => s,n,Set(VD-CALLRESULT=NoMessageLeft)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=NoMessageLeft)
exten => s,n,Hangup()
exten => s,n(machineok),NoOp(About to leave answering machine message)
; return control to the caller of the macro
exten => s,n,Set(VD-CALLRESULT=RecordingMachineMessage)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=RecordingMachineMessage)
exten => s,n,NoOp(Returning control to the caller of the macro)

[vd-human]
; in case callee is a human
; return control to caller of the macro
exten => s,1,Set(VD-CALLRESULT=TalkingToHuman)
exten => s,n,NoOp(VD-CALLRESULT: ${CD-CALLRESULT})
exten => s,n,Set(CDR(callresult)=TalkingToHuman)
exten => s,n,NoOp(Returning control to the caller of the macro)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Outbound contexts / channels
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-pstn]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; uncomment the exten lines if you have configured
; an outgoing VoIP provider and wish to allow PSTN
; calling ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; terminate calls to the regular phone network
; substitute 'username' and 'provider' below with
; your VoIP provider's info

;  NANPA numbers
;exten => _1NXXNXXXXXX,1,Macro(vd-dial,IAX2/username@provider/${EXTEN})
;  The rest of the world
;exten => _011N.,1,Macro(vd-dial,IAX2/username@provider/${EXTEN})

; Note: the following is our original configuration for vitelity.com:
;exten => _NXXNXXXXXX,1,goto(vd-pstn,1${EXTEN},1)
;exten => _1NXXNXXXXXX,1,Dial(SIP/${EXTEN}@outbound)
;exten => _011.,1,Dial(SIP/${EXTEN}@outbound)
; e911 must be enabled. see DIDs > NPANXXNXXX > Action menu > e911
;exten => _911,1,Dial(SIP/911@outbound)
exten => _NXXNXXXXXX,1,Goto(vd-pstn,1${EXTEN},1)
exten => _1NXXNXXXXXX,1,Macro(vd-dial,SIP/${EXTEN}@outbound)
exten => _011.,1,Macro(vd-dial,SIP/${EXTEN}@outbound)
; Note: Since our users come from different parts, enabling 911
; does not make sense...
exten => _911,1,Hangup()


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-voip]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; only calls to directly attached phones are allowed
; otherwise unscrupolous persons could make toll calls
; via VoIP
; [x, z, and n are special pattern matching characters]

; terminate calls to directly attached SIP phones
exten => _sip.,1,Macro(vd-dial,SIP/${EXTEN:3})
; terminate calls to directly attached IAX phones
exten => _ia[x].,1,Macro(vd-dial,IAX2/${EXTEN:3})
; terminate calls to the Gizmo Project 
exten => _gi[z]mo.,1,Macro(vd-dial,SIP/${EXTEN:5}@proxy01.sipphone.com)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-fwd]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; terminate calls to FWD
; you will need to have FWD configured
exten => _fwd.,1,Macro(vd-dial,SIP/${EXTEN:3}@fwd-outgoing)

; terminate US tollfree to FWD as well
exten => _1800NXXXXXX,1,Macro(vd-dial,SIP/*${EXTEN}@fwd-outgoing)
exten => _1888NXXXXXX,1,Macro(vd-dial,SIP/*${EXTEN}@fwd-outgoing)
exten => _1866NXXXXXX,1,Macro(vd-dial,SIP/*${EXTEN}@fwd-outgoing)
; see http://fwdnet.net/content/view/full/333 for a full list of
; FWD peering partners (Vonage is not anymore) and intenational
; toll free access.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-outbound]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; outbound contexts
; allow VoIP calling by default, but not PSTN callng
include => vd-voip
include => vd-fwd
; PSTN access is NOT enabled by default
;include => vd-pstn
include => vd-pstn


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; "Internal" contexts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-dial_out]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; context used as a local channel for outbound calls
; example: Dial(Local/yourextensionnumber@vd-dial_out/n,30,r)
; note: don't forget to append '/n' to the channel
;
; Input:
; * check vd-dial macro
;
; Output
; * check vd-dial macro
;
;;;;;;;;
; include outbound extensions
include => vd-outbound
; post-hangup processing
exten => h,1,NoOp(Call result:)
exten => h,n,NoOp("in: VD-MACHINEOK set to ${VD-MACHINEOK}")
exten => h,n,NoOp("out: VD-CALLERID set to ${VD-CALLERID}")
exten => h,n,NoOp("out: VD-OUTBOUNDCHANNEL set to ${VD-OUTBOUNDCHANNEL}")
exten => h,n,NoOp("out: VD-DIALSTATUS set to ${VD-DIALSTATUS}")
exten => h,n,NoOp("out: VD-CALLRESULT set to ${VD-CALLRESULT}")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-bridge]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; context activated upon successful creation of an outbound channel in a
; Originate() command
; Input:
; * ${VD_XMLRPC_URL}
; * ${VD_SCRIPT_NAME}
; * ${VD_USER_NAME}
; Output:
; * ${AGISTATUS} = 
; * ${VD_RESULT} = 
;;;;;;;;
exten => _X.,1,Noop('Starting vd-bridge callback')
exten => _X.,n,NoOp("in: VD_XMLRPC_URL set to ${VD_XMLRPC_URL}")
exten => _X.,n,NoOp("in: VD_SCRIPT_NAME set to ${VD_SCRIPT_NAME}")
exten => _X.,n,NoOp("in: VD_USER_NAME set to ${VD_USER_NAME}")
exten => _X.,n,Answer()
;exten => _X.,n,Goto(vd-outbound,${EXTEN},1) ; making outbound call
;exten => h,1,Noop("TODO: Call hanged up. Shall we update the statistics here?")
;exten => h,n,DeadAGI (Your_CDR_and_Billing_AGI_Go_Here)

exten => _X.,n,Set(VD_XMLRPC_URL=http://localhost/drupal6/xmlrpc.php)
exten => _X.,n,Set(VD_SCRIPT_NAME=hello_world)
exten => _X.,n,Set(VD_USER_NAME=john)
exten => _X.,n,Goto(vd-script_handler,s,1)

; -------------------------------------------------------------------
[voip_drupal_bridge]
exten => _X.,1,Noop('Starting [voip_bridge] callback')
;exten => _X.,n,Dial(SIP/Vonage/${EXTEN},120,rL(${max_duration}))
; TODO: we might have to pass the outbound channel as an argument to the call
exten => _X.,n,Goto(outbound,${EXTEN},1) ; making outbound call

exten => h,1,Noop("TODO: Call hanged up. Shall we update the statistics here?")
;exten => h,n,DeadAGI (Your_CDR_and_Billing_AGI_Go_Here)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-main]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; include internal extensions
include => vd-internal
; include outbound channels
include => vd-outbound

; some useful applications
exten => bridge,1,Goto(vd-bridge,s,1)
exten => demo,1,Goto(vd-demo,s,1)

; if no extension given lets do the default Asterisk demo
;exten => s,1,Goto(demo,s,1)

; -------------------------------------------------------------------
[voip_drupal_fastagi]

exten => s,1,Answer
;exten => s,n,Wait(1)
exten => s,n,Set(TIMEOUT(digit)=3)      ; Set Digit Timeout to 3 seconds
exten => s,n,Set(TIMEOUT(response)=10)  ; Set Response Timeout to 10 seconds
exten => s,n,NoOp(Invoking Voip Drupal via FastAGI)
exten => s,n,AGI(agi://127.0.0.1/voip_drupal/asterisk_call_handler.fastagi.php)
exten => s,n,NoOp("AGISTATUS set to ${AGISTATUS}")
exten => s,n,NoOp("WU_RESULT set to ${WU_RESULT}")
exten => s,n,Hangup



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-script_handler]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; calls the AGI function that manages Voip Drupal scripts
;
; Input:
; * ${VD_XMLRPC_URL}
; * ${VD_SCRIPT_NAME}
; * ${VD_USER_NAME}
; Output:
; * ${AGISTATUS} = 
; * ${VD_RESULT} = 
; * ${VD_ERROR_MSG} =
;
;;;
exten => s,1,NoOp(Entering vd-script_handler)
exten => s,n,NoOp("in: VD_XMLRPC_URL set to ${VD_XMLRPC_URL}")
exten => s,n,NoOp("in: VD_SCRIPT_NAME set to ${VD_SCRIPT_NAME}")
exten => s,n,NoOp("in: VD_USER_NAME set to ${VD_USER_NAME}")
exten => s,n,Set(VD_AGI_PATH=agi://127.0.0.1/voip_drupal/asterisk_script_handler.fastagi.php) ; TODO: move this variable to some configuration file
exten => s,n,NoOp(Invoking script handler via FastAGI)
exten => s,n,AGI(${VD_AGI_PATH},${VD_XMLRPC_URL},${VD_SCRIPT_NAME},${VD_USER_NAME})
exten => s,n,NoOp(Script handler result:)
exten => s,n,NoOp("out: AGISTATUS set to ${AGISTATUS}")
exten => s,n,NoOp("out: VD_RESULT set to ${VD_RESULT}")
exten => s,n,NoOp("out: VD_ERROR_MSG set to ${VD_ERROR_MSG}")
exten => s,n,Hangup

exten => i,1,NoOp(Handle invalid extension)
exten => i,n,Hangup()

exten => h,1,NoOp(TODO: Handle AGI script hang up)
exten => h,n,NoOp(Call AGI script here?? Update CDR?)
exten => h,n,NoOp(End of script handler processing)
       
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-demo]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
exten => s,1,Answer()
exten => s,2,Playback(agent-loginok)
exten => s,3,Playback(queue-thankyou)
exten => s,4,Playback(tt-monkeys)
exten => s,5,Playback(tt-monkeysintro)
exten => s,6,Hangup


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[vd-internal]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; default context for internal voip drupal extensions

exten => s,1,NoOp(------ Incoming call from: ${CALLERID(all)})
exten => s,n(beep),Playback(beep) ; type extension number after the beep
exten => s,n,WaitExten(5)
exten => s,n,NoOp(------ Timeout)
exten => s,n,Goto(beep)

; extension for what's up lawrence system
exten => 1,1,NoOp(Extension 1: lawrence)
exten => 1,n,Goto(lawrence,s,1)

exten => 2,1,NoOp(Extension 2: voip_drupal_fastagi)
exten => 2,n,Goto(voip_drupal_fastagi,s,1)

exten => 3,1,NoOp(Extension 3: vd-script_handler)
exten => 3,n,Set(VD_XMLRPC_URL=http://localhost/drupal6/xmlrpc.php)
exten => 3,n,Set(VD_SCRIPT_NAME=hello_world)
exten => 3,n,Set(VD_USER_NAME=john)
exten => 3,n,Goto(vd-script_handler,s,1)

exten => 10,1,NoOp(Extension 10: vd-demo)
;exten => 10,n,Goto(demo,s,1) ; Asterisk demo
exten => 10,n,Goto(vd-demo,s,1)

;test based on http://www.linux.com/archive/feature/128386
exten => 22,1,NoOp(Extension 22: agi test)
exten => 22,n,AGI(agitest.php)
exten => 22,n,Hangup()

exten => 99,1,NoOp(Extension 99: hanging up)
exten => 99,n,Hangup

exten => lawrence,1,Goto(1,1)
exten => voip_drupal_fastagi,1,Goto(2,1)
exten => vd-script_handler,1,Goto(3,1)
exten => demo,1,Goto(10,1)
exten => agitest,1,Goto(22,1)

exten => i,1,NoOp(------ Invalid extension: ${EXTEN})
exten => i,n,Goto(s,beep)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[lawrence]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; main context for the what's up lawrence system
exten => s,1,Answer() ; Answer the line
exten => s,n,Wait(1) ; Wait a second, just for fun
exten => s,n,Set(TIMEOUT(digit)=3) ; Set Digit Timeout to 3 seconds
exten => s,n,Set(TIMEOUT(response)=10) ; Set Response Timeout to 10 seconds
exten => s,n(whatsup_main),NoOp(Invoking the Whats Up system)
exten => s,n,AGI(lawrence/whatsup_main.agi.php)
exten => s,n,NoOp("WU_RESULT set to ${WU_RESULT}")
exten => s,n,Hangup


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Inbound contexts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[default]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; default context for unmanaged calls
exten => s,1,Verbose(1,Unrouted call handler)
exten => s,n,Answer()
exten => s,n,Wait(1)
exten => s,n,Playback(tt-weasels)
exten => s,n,Hangup()
 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[inbound]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; default context for inbound calls
exten => s,1,Verbose(1,Default inbound context)
exten => s,n,Answer()
exten => s,n,Wait(1)
exten => s,n,Playback(hello-world)
exten => s,n,Hangup()

; vitelity extensions
exten => 6173018211,1,Answer
;exten => 6173018211,1,goto(demo,s,1)
;exten => 6173018211,n,Goto(vd-main,voip_drupal_fastagi,1)
;exten => 6173018211,n,Goto(vd-main,vd-script_handler,1)
;exten => 6173018211,n,Playback(hello-world) ; 
;exten => 6173018211,n,Hangup()
exten => 6173018211,n,Goto(vd-main,s,1) ; TODO: fix Background() bug
;exten => 6173018211,1,Goto(outbound,6177920995,1) ; calling leo's cell phone


[from-gizmo]
; handle incoming calls from Gizmo and other SIP phones
exten => s,1,NoOp(------ Call from: ${CALLERID(all)})
exten => s,n,Goto(vd-main,s,1)   ; goto Voip Drupal menu
exten => s,n,Hangup
;exten => whatsup,1,Goto(demo,s,1)
;exten => whatsup,1,Goto(vd-main,voip_drupal_fastagi,1) 
exten => whatsup,1,Goto(vd-main,vd-script_handler,1) 
exten => lawrence,1,Goto(vd-main,lawrence,1) ; goto whatsup lawrence system
exten => chiapas,1,Goto(vd-main,s,1)   ; goto Voip Drupal menu


